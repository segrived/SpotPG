@using SpotPG.Services

<MudGrid>
    <MudItem xs="12">
        <MudSelect @bind-Value="@releasesCount" Label="Releases count" T="int" Dense="true" MaxHeight="200" Disabled="inProcess">
            <MudSelectItem T="int" Value="100">100</MudSelectItem>
            <MudSelectItem T="int" Value="200">200</MudSelectItem>
            <MudSelectItem T="int" Value="300">300</MudSelectItem>
        </MudSelect>

        <MudSelect @bind-Value="@selectedGenre" Label="Genre" T="string" Dense="true" MaxHeight="500" Disabled="inProcess">
            @foreach ((string _, string name) in Genres)
            {
                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
            }
        </MudSelect>
    </MudItem>

    <MudItem xs="12">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GetReleases">Load releases</MudButton>
    </MudItem>
</MudGrid>

@code {

    private int releasesCount = 100;
    private string selectedGenre = "All";

    private bool inProcess;

    private async Task GetReleases()
    {
        inProcess = true;
        await OnReleaseListLoaded.InvokeAsync(await GetReleaseNamesAsync(releasesCount, selectedGenre));
        inProcess = false;
    }

    [Parameter]
    public EventCallback<IEnumerable<ReleaseInfo>> OnReleaseListLoaded { get; set; }
}